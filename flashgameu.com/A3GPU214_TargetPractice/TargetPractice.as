package  {	import flash.display.*;	import flash.events.*;	public class TargetPractice extends MovieClip {				// movie clips		private var ball:Ball;		private var ballShadow:BallShadow;		private var target:Target;		private var cannonRings:Array;				// cannon position and angle		private var cannonPosition:Number;		private var cannonAngle:Number;				// ball vector		private var dy,dz:Number;				public function TargetPractice() {						// set up all movie clips			target = new Target();			ball = new Ball();			ballShadow = new BallShadow();			ballShadow.rotationX = -90; // rotate shadow to lie down on surface			ballShadow.y = 350; // shadow on the ground			addChild(ballShadow);			addChild(target);			addChild(ball);						// create 10 rings to show cannon direction			cannonRings = new Array();			for(var i=0;i<10;i++) {				var cannonRing:CannonRing = new CannonRing();				cannonRings.push(cannonRing);				addChild(cannonRing);			}						// set initial cannon position and angle			cannonAngle = -30;			cannonPosition = 275;			drawCannon();						// set up first target			setUpTarget();						// accept keyboard input			stage.addEventListener(KeyboardEvent.KEY_DOWN,keyPressedUp);		}				public function drawCannon() {			// place ball			ball.x = cannonPosition;			ball.y = 350;			ball.z = -100;					// place shadow			ballShadow.x = cannonPosition;			ballShadow.y = 350;			ballShadow.z = -100;						// draw cannon rings			for(var i=0;i<cannonRings.length;i++) {				cannonRings[i].x = cannonPosition;				cannonRings[i].y = 350 + 5*i*Math.sin(cannonAngle*(Math.PI/180));				cannonRings[i].z = -100+ 5*i*Math.cos(cannonAngle*(Math.PI/180));			}		}		// pick a random location for the target in the field		private function setUpTarget() {			target.x = Math.random()*400-200+275;			target.y = 350;			target.z = Math.random()*1200+600;		}				// accept key presses and move the cannon		public function keyPressedUp(event:KeyboardEvent) {			if (event.keyCode == 37) {				cannonPosition -= 5;				drawCannon();			} else if (event.keyCode == 39) {				cannonPosition += 5;				drawCannon();			} else if (event.keyCode == 38) {				cannonAngle -= 1;				drawCannon();			} else if (event.keyCode == 40) {				cannonAngle += 1;				drawCannon();			} else if (event.keyCode == 32) {				fireBall();			}					}					// throw the cannon ball		private function fireBall() {			var f:Number = 15.0; // initial force of blast						// calculate initial vector based on force and angle			dy = f*Math.sin(cannonAngle*(Math.PI/180));			dz = f*Math.cos(cannonAngle*(Math.PI/180));					// move ball each frame			addEventListener(Event.ENTER_FRAME, moveBall);		}				// move ball and account for dravity		private function moveBall(e:Event) {						// ball movement			ball.y += dy;			ball.z += dz;									// move shadow along with ball			ballShadow.z += dz;						// change vector to account for gravity			dy += .1;						// see if the ball hit the ground			if (ball.y > 350) {				removeEventListener(Event.ENTER_FRAME, moveBall);				var dist:Number = Math.sqrt(Math.pow(ball.x-target.x,2)+Math.pow(ball.z-target.z,2));				if (dist < 50) {					setUpTarget();				}			}		}	}}